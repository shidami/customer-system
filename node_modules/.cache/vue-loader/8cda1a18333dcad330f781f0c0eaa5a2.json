{"remainingRequest":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\knowledge\\components\\KnowledgeCategory-edit.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\knowledge\\components\\KnowledgeCategory-edit.vue","mtime":1614579763251},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90cmVlLWNvbW1vbi5sZXNzIjsK"},{"version":3,"sources":["KnowledgeCategory-edit.vue"],"names":[],"mappings":";AACA","file":"KnowledgeCategory-edit.vue","sourceRoot":"src/views/knowledge/components","sourcesContent":["<style lang=\"less\">\r\n  @import \"../../../styles/tree-common.less\";\r\n</style>\r\n<template>\r\n  <Modal class=\"search\" title=\"知识类型\" v-model=\"visiable\" :mask-closable=\"false\" :width=\"1000\">\r\n    <Row class=\"operation\">\r\n      <Button @click=\"addRoot\" type=\"primary\" icon=\"md-add\">添加分类</Button>\r\n      <Button @click=\"add\" icon=\"md-add\">添加子类</Button>\r\n      <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\r\n      <Button @click=\"getParentList\" icon=\"md-refresh\">刷新</Button>\r\n      <i-switch v-model=\"strict\" size=\"large\" style=\"margin-left:5px\">\r\n        <span slot=\"open\">级联</span>\r\n        <span slot=\"close\">单选</span>\r\n      </i-switch>\r\n    </Row>\r\n    <Row type=\"flex\" justify=\"start\">\r\n      <Col :md=\"9\" :lg=\"9\" :xl=\"7\">\r\n      <Alert show-icon>\r\n        当前选择编辑：\r\n        <span class=\"select-title\">{{editTitle}}</span>\r\n        <a class=\"select-clear\" v-if=\"form.id\" @click=\"cancelEdit\">取消选择</a>\r\n      </Alert>\r\n      <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"search\" placeholder=\"输入节点名搜索\" clearable />\r\n      <div class=\"tree-bar\" :style=\"{maxHeight: maxHeight}\">\r\n        <Tree ref=\"tree\" :data=\"data\" :load-data=\"loadData\" show-checkbox @on-check-change=\"changeSelect\"\r\n          @on-select-change=\"selectTree\" :check-strictly=\"!strict\"></Tree>\r\n        <Spin size=\"large\" fix v-if=\"loading\"></Spin>\r\n      </div>\r\n      </Col>\r\n      <Col :md=\"18\" :lg=\"14\" :xl=\"12\" style=\"margin-left:10px;\">\r\n      <Form ref=\"form\" :model=\"form\" :label-width=\"100\" :rules=\"formValidate\">\r\n        <FormItem label=\"上级节点\" prop=\"parenTitle\">\r\n          <div style=\"display:flex;\">\r\n            <Input v-model=\"form.parenTitle\" readonly style=\"margin-right:10px;\" />\r\n            <Poptip transfer trigger=\"click\" placement=\"right-start\" title=\"选择上级节点\" width=\"250\">\r\n              <Button icon=\"md-list\">选择分类</Button>\r\n              <div slot=\"content\" style=\"position:relative;min-height:5vh\">\r\n                <Tree ref=\"treeEdit\" :data=\"dataEdit\" :load-data=\"loadData\" @on-select-change=\"selectTreeEdit\"></Tree>\r\n                <Spin size=\"large\" fix v-if=\"loadingEdit\"></Spin>\r\n              </div>\r\n            </Poptip>\r\n          </div>\r\n        </FormItem>\r\n        <FormItem label=\"节点名称\" prop=\"title\">\r\n          <Input v-model=\"form.title\" />\r\n        </FormItem>\r\n        <!-- <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n            <Tooltip trigger=\"hover\" placement=\"right\" content=\"值越小越靠前，支持小数\">\r\n              <InputNumber :max=\"1000\" :min=\"0\" v-model=\"form.sortOrder\"></InputNumber>\r\n            </Tooltip>\r\n          </FormItem> -->\r\n        <!-- <FormItem label=\"是否启用\" prop=\"status\">\r\n          <i-switch size=\"large\" v-model=\"form.status\" :true-value=\"0\" :false-value=\"-1\">\r\n            <span slot=\"open\">启用</span>\r\n            <span slot=\"close\">禁用</span>\r\n          </i-switch>\r\n        </FormItem> -->\r\n      </Form>\r\n      </Col>\r\n    </Row>\r\n    <div slot=\"footer\">\r\n      <Button @click=\"submitEdit\" :loading=\"submitLoading\" type=\"primary\" icon=\"ios-create-outline\">修改并保存</Button>\r\n      <Button @click=\"handleReset\">重置</Button>\r\n    </div>\r\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\r\n      <Form ref=\"formAdd\" :model=\"formAdd\" :label-width=\"100\" :rules=\"formValidate\">\r\n        <div v-if=\"showParent\">\r\n          <FormItem label=\"上级节点：\" prop=\"parenTitle\">{{form.title}}</FormItem>\r\n        </div>\r\n        <FormItem label=\"节点名称\" prop=\"title\">\r\n          <Input v-model=\"formAdd.title\" />\r\n        </FormItem>\r\n        <!-- <FormItem label=\"排序值\" prop=\"sortOrder\">\r\n          <Tooltip trigger=\"hover\" placement=\"right\" content=\"值越小越靠前，支持小数\">\r\n            <InputNumber :max=\"1000\" :min=\"0\" v-model=\"formAdd.sortOrder\"></InputNumber>\r\n          </Tooltip>\r\n        </FormItem> -->\r\n        <!-- <FormItem label=\"是否启用\" prop=\"status\">\r\n          <i-switch size=\"large\" v-model=\"formAdd.status\" :true-value=\"0\" :false-value=\"-1\">\r\n            <span slot=\"open\">启用</span>\r\n            <span slot=\"close\">禁用</span>\r\n          </i-switch>\r\n        </FormItem> -->\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\r\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitAdd\">提交</Button>\r\n      </div>\r\n    </Modal>\r\n  </Modal>\r\n</template>\r\n\r\n<script>\r\n  // 相关接口\r\n  import {\r\n    getAllBySysKnowledgeCategory, //获取知识类型信息，默认返回1级菜单类型\r\n    addSysKnowledgeCategory, //添加知识类型\r\n    editSysKnowledgeCategory, //修改知识类型\r\n    deleteSysKnowledgeCategory //删除知识类型\r\n  } from \"@/api/index\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        visiable: false,\r\n        loading: false, // 树加载状态\r\n        maxHeight: \"500px\",\r\n        strict: true,\r\n        loadingEdit: false, // 编辑上级树加载状态\r\n        modalVisible: false, // 添加显示\r\n        selectList: [], // 多选数据\r\n        selectCount: 0, // 多选计数\r\n        showParent: false, // 显示上级标识\r\n        modalTitle: \"\", // 添加标题\r\n        editTitle: \"\", // 编辑节点名称\r\n        searchKey: \"\", // 搜索树\r\n        form: {\r\n          // 编辑对象初始化数据\r\n          id: \"\",\r\n          title: \"\",\r\n          parentId: \"\",\r\n          parenTitle: \"\",\r\n          sortOrder: 0,\r\n          status: 0\r\n        },\r\n        formAdd: {\r\n          // 添加对象初始化数据\r\n        },\r\n        formValidate: {\r\n          // 表单验证规则\r\n          title: [{required: true, message: \"名称不能为空\",trigger: \"blur\"}],\r\n          // sortOrder: [{\r\n          //   required: true,\r\n          //   type: \"number\",\r\n          //   message: \"排序值不能为空\",\r\n          //   trigger: \"blur\"\r\n          // }],\r\n          parenTitle: [{required: true,message: \"上级节点不能为空\",trigger: \"blur\"}]\r\n        },\r\n        submitLoading: false,\r\n        data: [],\r\n        dataEdit: [],\r\n        timetask: '',\r\n      };\r\n    },\r\n    methods: {\r\n      init() {\r\n        // 获取分类\r\n        this.getParentList();\r\n      },\r\n      getParentList() {\r\n        this.loading = true;\r\n        getAllBySysKnowledgeCategory().then(res => {\r\n          console.log('获取知识类型数据')\r\n          console.log(res)\r\n          this.loading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.isParent) {\r\n                e.loading = false;\r\n                e.children = [];\r\n              }\r\n              if(e.parentId=='0'){\r\n                e.parenTitle=\"根节点\"\r\n              }\r\n            });\r\n            this.data = res.result;\r\n            this.getParentListEdit()\r\n          } else {\r\n            this.$Message.error({\r\n              background: true,\r\n              content: res.message\r\n            });\r\n          }\r\n        });\r\n      },\r\n      // 选择分类编辑节点时使用,深拷贝另一组数据（多重嵌套对象），相互独立，之后联动\r\n      getParentListEdit() {\r\n        this.dataEdit = JSON.parse(JSON.stringify(this.data))\r\n        let first = {\r\n          id: \"0\",\r\n          title: \"根节点\"\r\n        };\r\n        this.dataEdit.unshift(first);\r\n      },\r\n      loadData(item, callback) {\r\n        console.log(item)\r\n        let params = {\r\n          parentId: item.id,\r\n        }\r\n        // 异步加载树子类数据\r\n        getAllBySysKnowledgeCategory(params).then(res => {\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.isParent) {\r\n                e.loading = false;\r\n                e.children = [];\r\n              }\r\n            });\r\n            callback(res.result);\r\n          }\r\n        });\r\n      },\r\n      search() {\r\n        if (this.timetask) {\r\n          clearTimeout(this.timetask)\r\n        }\r\n        this.timetask = setTimeout(this.searchAjax, 1000)\r\n      },\r\n      searchAjax() {\r\n        console.log('输入框搜索')\r\n        if (this.searchKey) {\r\n          this.loading = true;\r\n          getAllBySysKnowledgeCategory({\r\n            title: this.searchKey\r\n          }).then(res => {\r\n            this.loading = false;\r\n            if (res.success) {\r\n              this.data = res.result;\r\n            }\r\n          });\r\n        } else {\r\n          // 为空重新加载\r\n          this.getParentList();\r\n        }\r\n      },\r\n      selectTree(v) {\r\n        console.log('点击树节点')\r\n        console.log(v)\r\n        if (v.length > 0) {\r\n          // 转换null为\"\"\r\n          for (let attr in v[0]) {\r\n            if (v[0][attr] == null) {\r\n              v[0][attr] = \"\";\r\n            }\r\n          }\r\n          let str = JSON.stringify(v[0]);\r\n          let data = JSON.parse(str);\r\n          console.log(data)\r\n          this.editTitle = data.title;\r\n          this.form=data;\r\n          let selectNode = this.$refs.treeEdit.getSelectedNodes()[0];\r\n          if (selectNode) {\r\n            selectNode.selected = false;\r\n          }\r\n        } else {\r\n          this.cancelEdit();\r\n        }\r\n      },\r\n      cancelEdit() {\r\n        let data = this.$refs.tree.getSelectedNodes()[0];\r\n        if (data) {\r\n          data.selected = false;\r\n        }\r\n        this.$refs.form.resetFields();\r\n        this.form.id = \"\";\r\n        this.editTitle = \"\";\r\n      },\r\n      selectTreeEdit(v) {\r\n        console.log('选择分类')\r\n        console.log(v)\r\n        if (v.length > 0) {\r\n          // 转换null为\"\"\r\n          for (let attr in v[0]) {\r\n            if (v[0][attr] == null) {\r\n              v[0][attr] = \"\";\r\n            }\r\n          }\r\n          let str = JSON.stringify(v[0]);\r\n          let data = JSON.parse(str);\r\n          this.form.parentId = data.id;\r\n          this.form.parenTitle = data.title;\r\n        }\r\n      },\r\n      handleReset() {\r\n        this.$refs.form.resetFields();\r\n        this.form.status = 0;\r\n      },\r\n      submitEdit() {\r\n        this.$refs.form.validate(valid => {\r\n          if (valid) {\r\n            if (!this.form.id) {\r\n              this.$Message.warning(\"请先点击选择要修改的节点\");\r\n              return;\r\n            }\r\n            this.submitLoading = true;\r\n            // 避免传入null字符串\r\n            editSysKnowledgeCategory(this.form).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success) {\r\n                this.$Message.success(\"编辑成功\");\r\n                this.init();\r\n                this.modalVisible = false;\r\n              } else {\r\n                this.$Message.error({\r\n                  background: true,\r\n                  content: res.message\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      submitAdd() {\r\n        this.$refs.formAdd.validate(valid => {\r\n          if (valid) {\r\n            this.submitLoading = true;\r\n            console.log(this.formAdd)\r\n            addSysKnowledgeCategory(this.formAdd).then(res => {\r\n              this.submitLoading = false;\r\n              if (res.success) {\r\n                this.$Message.success(\"添加成功\");\r\n                this.init();\r\n                this.$parent.getDataList()\r\n              } else {\r\n                this.$Message.error({\r\n                  background: true,\r\n                  content: res.message\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      add() {\r\n        if (!this.form.id) {\r\n          this.$Message.warning(\"请先点击选择一个节点\");\r\n          return;\r\n        }\r\n        this.modalTitle = \"添加子类\";\r\n        this.showParent = true;\r\n        this.formAdd = {\r\n          parenTitle: this.form.title,\r\n          parentId: this.form.id,\r\n          sortOrder: 0,\r\n          status: 0\r\n        };\r\n        this.modalVisible = true;\r\n      },\r\n      addRoot() {\r\n        this.modalTitle = \"添加分类\";\r\n        this.showParent = false;\r\n        this.formAdd = {\r\n          parentId: 0,\r\n          sortOrder: 0,\r\n          status: 0\r\n        };\r\n        this.modalVisible = true;\r\n      },\r\n      changeSelect(v) {\r\n        console.log('勾选复选框')\r\n        console.log(v)\r\n        this.selectCount = v.length;\r\n        this.selectList = v;\r\n      },\r\n      delAll() {\r\n        if (this.selectCount <= 0) {\r\n          this.$Message.warning(\"您还未勾选要删除的数据\");\r\n          return;\r\n        }\r\n        this.$Modal.confirm({\r\n          title: \"确认删除\",\r\n          content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据及其下级所有数据?\",\r\n          loading: true,\r\n          onOk: () => {\r\n            let ids = [];\r\n            this.selectList.forEach(function(e) {\r\n              ids.push(e.id);\r\n            });\r\n            console.log(ids)\r\n            deleteSysKnowledgeCategory({\r\n              ids: ids\r\n            }).then(res => {\r\n              this.$Modal.remove();\r\n              if (res.success) {\r\n                this.$Message.success(\"删除成功\");\r\n                this.selectList = [];\r\n                this.selectCount = 0;\r\n                this.cancelEdit();\r\n                this.init();\r\n              } else {\r\n                this.$Message.error({\r\n                  background: true,\r\n                  content: res.message\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      // 计算高度\r\n      let height = document.documentElement.clientHeight;\r\n      this.maxHeight = Number(height - 287) + \"px\";\r\n    }\r\n  };\r\n</script>\r\n"]}]}