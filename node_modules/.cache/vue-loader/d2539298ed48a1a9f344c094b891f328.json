{"remainingRequest":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\knowledge\\components\\excelImport.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\knowledge\\components\\excelImport.vue","mtime":1614579763251},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgZ2V0QWxsQnlTeXNLbm93bGVkZ2VDYXRlZ29yeSwgLy/ojrflj5bnn6Xor4bnsbvlnovkv6Hmga/vvIzpu5jorqTov5Tlm54x57qn6I+c5Y2V57G75Z6LCiAgaW1wb3J0U3lzS25vd2xlZGdlTGlzdCAgICAgICAgLy/lr7zlhaXnn6Xor4bngrnmlbDmja4KfSBmcm9tICJAL2FwaS9pbmRleCI7CmltcG9ydCBleGNlbCBmcm9tICJAL2xpYnMvZXhjZWwiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBpbXBvcnRNb2RhbFZpc2libGU6IGZhbHNlLAogICAgICByZWFkaW5nOiBmYWxzZSwgLy8g6K+75Y+W5LitCiAgICAgIHVwbG9hZGZpbGU6IHsKICAgICAgICBuYW1lOiAiIgogICAgICB9LAogICAgICBzZWFyY2hLZXk6JycsCiAgICAgIHRyZWVUaXRsZTogJycsICAgICAgICAgICAgICAgICAgICAgICAgLy/pgInkuK3oioLngrnlkI3np7AKICAgICAgY2F0ZWdvcnlJZDonJywgICAgICAgICAgICAgICAgICAgICAgICAvL+mAieS4reiKgueCueeahElECiAgICAgIGRhdGE6IFtdLAogICAgICBpbXBvcnRMb2FkaW5nOiBmYWxzZSwgLy8g5a+85YWl5Yqg6L2954q25oCBCiAgICAgIGltcG9ydENvbHVtbnM6IFtdLAogICAgICBpbXBvcnRUYWJsZURhdGE6IFtdLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdCgpIHsKICAgICAgdGhpcy5nZXRQYXJlbnRMaXN0KCkKICAgIH0sCiAgICBnZXRQYXJlbnRMaXN0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBnZXRBbGxCeVN5c0tub3dsZWRnZUNhdGVnb3J5KCkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgcmVzLnJlc3VsdC5mb3JFYWNoKGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgaWYgKGUuaXNQYXJlbnQpIHsKICAgICAgICAgICAgICBlLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICBlLmNoaWxkcmVuID0gW107CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5kYXRhID0gcmVzLnJlc3VsdDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcih7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRydWUsCiAgICAgICAgICAgIGNvbnRlbnQ6IHJlcy5tZXNzYWdlCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc2VhcmNoKCkgewogICAgICBpZiAodGhpcy50aW1ldGFzaykgewogICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWV0YXNrKQogICAgICB9CiAgICAgIHRoaXMudGltZXRhc2sgPSBzZXRUaW1lb3V0KHRoaXMuc2VhcmNoQWpheCwgMTAwMCkKICAgIH0sCiAgICBzZWFyY2hBamF4KCkgewogICAgICBjb25zb2xlLmxvZygn6L6T5YWl5qGG5pCc57SiJykKICAgICAgaWYgKHRoaXMuc2VhcmNoS2V5KSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICBnZXRBbGxCeVN5c0tub3dsZWRnZUNhdGVnb3J5KHt0aXRsZTogdGhpcy5zZWFyY2hLZXl9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgICB0aGlzLmRhdGEgPSByZXMucmVzdWx0OwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIOS4uuepuumHjeaWsOWKoOi9vQogICAgICAgIHRoaXMuZ2V0UGFyZW50TGlzdCgpOwogICAgICB9CiAgICB9LAogICAgY2FuY2VsVHJlZSgpIHsKICAgICAgY29uc29sZS5sb2coJ+agkeiKgueCueWPlua2iOmAieaLqeaMiemSricpCiAgICAgIGxldCBkYXRhID0gdGhpcy4kcmVmcy50cmVlLmdldFNlbGVjdGVkTm9kZXMoKVswXTsKICAgICAgaWYgKGRhdGEpIHsKICAgICAgICBkYXRhLnNlbGVjdGVkID0gZmFsc2U7CiAgICAgIH0KICAgICAgdGhpcy5jYXRlZ29yeUlkID0gJyc7CiAgICAgIHRoaXMudHJlZVRpdGxlID0gIiI7CiAgICB9LAogICAgc2VsZWN0VHJlZSh2KSB7CiAgICAgIGlmICh2Lmxlbmd0aCA+IDApIHsKICAgICAgICAvLyDovazmjaJudWxs5Li6IiIKICAgICAgICBmb3IgKGxldCBhdHRyIGluIHZbMF0pIHsKICAgICAgICAgIGlmICh2WzBdW2F0dHJdID09IG51bGwpIHsKICAgICAgICAgICAgdlswXVthdHRyXSA9ICIiOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBsZXQgc3RyID0gSlNPTi5zdHJpbmdpZnkodlswXSk7CiAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKHN0cik7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSkKICAgICAgICB0aGlzLmNhdGVnb3J5SWQgPSBkYXRhLmlkOwogICAgICAgIHRoaXMudHJlZVRpdGxlID0gZGF0YS50aXRsZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNhbmNlbFRyZWUoKTsKICAgICAgfQogICAgfSwKICAgIGxvYWREYXRhKGl0ZW0sIGNhbGxiYWNrKSB7CiAgICAgIGNvbnNvbGUubG9nKGl0ZW0pCiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgcGFyZW50SWQ6IGl0ZW0uaWQsCiAgICAgIH0KICAgICAgLy8g5byC5q2l5Yqg6L295qCR5a2Q57G75pWw5o2uCiAgICAgIGdldEFsbEJ5U3lzS25vd2xlZGdlQ2F0ZWdvcnkocGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICByZXMucmVzdWx0LmZvckVhY2goZnVuY3Rpb24oZSkgewogICAgICAgICAgICBpZiAoZS5pc1BhcmVudCkgewogICAgICAgICAgICAgIGUubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgIGUuY2hpbGRyZW4gPSBbXTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBjYWxsYmFjayhyZXMucmVzdWx0KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgYmVmb3JlVXBsb2FkSW1wb3J0KGZpbGUpIHsKICAgICAgdGhpcy51cGxvYWRmaWxlID0gZmlsZTsKICAgICAgY29uc3QgZmlsZUV4dCA9IGZpbGUubmFtZQogICAgICAgIC5zcGxpdCgiLiIpCiAgICAgICAgLnBvcCgpCiAgICAgICAgLnRvTG9jYWxlTG93ZXJDYXNlKCk7CiAgICAgIGlmIChmaWxlRXh0ID09ICJ4bHN4IiB8fCBmaWxlRXh0ID09ICJ4bHMiKSB7CiAgICAgICAgdGhpcy5yZWFkRmlsZShmaWxlKTsKICAgICAgICB0aGlzLmZpbGUgPSBmaWxlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJE5vdGljZS53YXJuaW5nKHsKICAgICAgICAgIHRpdGxlOiAi5paH5Lu257G75Z6L6ZSZ6K+vIiwKICAgICAgICAgIGRlc2M6ICLmiYDpgInmlofku7bigJggIiArCiAgICAgICAgICAgIGZpbGUubmFtZSArCiAgICAgICAgICAgICIg4oCZ5LiN5pivRVhDRUzmlofku7bvvIzor7fpgInmi6nlkI7nvIDkuLoueGxzeOaIluiAhS54bHPnmoRFWENFTOaWh+S7tuOAgiIKICAgICAgICB9KTsKICAgICAgfQogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgcmVhZEZpbGUoZmlsZSkgewogICAgICB0aGlzLnJlYWRpbmcgPSB0cnVlOwogICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICAgIHJlYWRlci5vbmVycm9yID0gZSA9PiB7CiAgICAgICAgdGhpcy5yZWFkaW5nID0gZmFsc2U7CiAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcigi5paH5Lu26K+75Y+W5Ye66ZSZIik7CiAgICAgIH07CiAgICAgIHJlYWRlci5vbmxvYWQgPSBlID0+IHsKICAgICAgICBjb25zdCBkYXRhID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIGNvbnN0IHsKICAgICAgICAgIGhlYWRlciwKICAgICAgICAgIHJlc3VsdHMKICAgICAgICB9ID0gZXhjZWwucmVhZChkYXRhLCAiYXJyYXkiKTsKICAgICAgICBjb25zdCB0YWJsZVRpdGxlID0gaGVhZGVyLm1hcChpdGVtID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRpdGxlOiBpdGVtLAogICAgICAgICAgICBrZXk6IGl0ZW0sCiAgICAgICAgICAgIG1pbldpZHRoOiAxMDAsCiAgICAgICAgICAgIGFsaWduOiAiY2VudGVyIgogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmltcG9ydFRhYmxlRGF0YSA9IHJlc3VsdHM7CiAgICAgICAgdGhpcy5pbXBvcnRDb2x1bW5zID0gdGFibGVUaXRsZTsKICAgICAgICB0aGlzLnJlYWRpbmcgPSBmYWxzZTsKICAgICAgICB0aGlzLiRNZXNzYWdlLnN1Y2Nlc3MoIuivu+WPluaVsOaNruaIkOWKnyIpOwogICAgICB9OwogICAgfSwKICAgIGltcG9ydERhdGEoKSB7CiAgICAgIGlmKCF0aGlzLmNhdGVnb3J5SWQpewogICAgICAgIHRoaXMuJE1lc3NhZ2Uud2FybmluZygn6K+36YCJ5oup55+l6K+G57G75Z6LJykKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQogICAgICB0aGlzLmltcG9ydFRhYmxlRGF0YS5mb3JFYWNoKGl0ZW09PnsKICAgICAgICBpdGVtLmNvbnRlbnRUZXh0PWl0ZW0uY29udGVudAogICAgICB9KQogICAgICB0aGlzLmltcG9ydFRhYmxlRGF0YT1KU09OLnN0cmluZ2lmeSh0aGlzLmltcG9ydFRhYmxlRGF0YSk7CiAgICAgIGxldCBwYXJhbXM9ewogICAgICAgIGNhdGVnb3J5SWQ6dGhpcy5jYXRlZ29yeUlkLAogICAgICAgIGRhdGFMaXN0OnRoaXMuaW1wb3J0VGFibGVEYXRhCiAgICAgIH0KICAgICAgdGhpcy5pbXBvcnRMb2FkaW5nID0gdHJ1ZTsKICAgICAgLy8g5Lyg5YWl5a+85YWl5pWw5o2uIOWQjuerr+aOpeaUtmJvZHnmlbDnu4TliJfooajmibnph4/lr7zlhaUKICAgICAgaW1wb3J0U3lzS25vd2xlZGdlTGlzdChwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLmltcG9ydExvYWRpbmcgPSBmYWxzZTsKICAgICAgICBpZiAocmVzLnN1Y2Nlc3MpIHsKICAgICAgICAgIHRoaXMuY2xlYXJJbXBvcnREYXRhKCkKICAgICAgICAgIHRoaXMuJHBhcmVudC5nZXREYXRhTGlzdCgpOwogICAgICAgICAgdGhpcy5pbXBvcnRNb2RhbFZpc2libGUgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJE1vZGFsLmluZm8oewogICAgICAgICAgICB0aXRsZTogIuWvvOWFpee7k+aenCIsCiAgICAgICAgICAgIGNvbnRlbnQ6IHJlcy5tZXNzYWdlCiAgICAgICAgICB9KTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMuJE1lc3NhZ2UuZXJyb3IoewogICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cnVlLAogICAgICAgICAgICBjb250ZW50OiByZXMubWVzc2FnZQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGNsZWFySW1wb3J0RGF0YSgpIHsKICAgICAgdGhpcy5pbXBvcnRUYWJsZURhdGEgPSBbXTsKICAgICAgdGhpcy5pbXBvcnRDb2x1bW5zID0gW107CiAgICAgIHRoaXMudXBsb2FkZmlsZSA9IHt9OwogICAgfQogIH0KfQo="},{"version":3,"sources":["excelImport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"excelImport.vue","sourceRoot":"src/views/knowledge/components","sourcesContent":["<template>\r\n  <Drawer title=\"导入数据\" closable v-model=\"importModalVisible\" width=\"1000\">\r\n    <Row gutter=\"20\">\r\n      <Col span=\"6\">\r\n        <Spin fix v-if=\"loading\"></Spin>\r\n        <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"search\" placeholder=\"输入节点名搜索\" clearable />\r\n        <Alert show-icon class=\"mt-10\">当前选择编辑：\r\n          <span class=\"select-title\">{{treeTitle}}</span>\r\n          <a class=\"select-clear ml-5\" @click=\"cancelTree\" v-if=\"treeTitle\">取消选择</a>\r\n        </Alert>\r\n        <Tree ref=\"tree\" :data=\"data\" :load-data=\"loadData\" @on-select-change=\"selectTree\"></Tree>\r\n      </Col>\r\n      <Col span=\"18\">\r\n        <div style=\"display:flex;justify-content: space-between;align-items: center;\">\r\n          <Upload action :before-upload=\"beforeUploadImport\" accept=\".xls, .xlsx\">\r\n            <Button :loading=\"reading\" icon=\"ios-cloud-upload-outline\" style=\"margin-right:10px\">上传Excel文件</Button>\r\n            <span v-if=\"uploadfile.name\">当前选择文件：{{ uploadfile.name }}</span>\r\n          </Upload>\r\n          <Button @click=\"clearImportData\" icon=\"md-trash\">清空数据</Button>\r\n        </div>\r\n        <Alert type=\"warning\" show-icon>导入前请下载查看导入模版数据文件，确保数据格式正确，不得修改列名称。</Alert>\r\n        <Table :columns=\"importColumns\" border height=\"510\" :data=\"importTableData\" ref=\"importTable\"></Table>\r\n      </Col>\r\n    </Row>\r\n    <div class=\"demo-drawer-footer\">\r\n      <Button :loading=\"importLoading\" :disabled=\"importTableData.length<=0\" @click=\"importData\" class=\"mt-10\" type=\"primary\">确认导入<span\r\n          v-if=\"importTableData.length>0\">{{importTableData.length}} 条数据</span>\r\n      </Button>\r\n    </div>\r\n  </Drawer>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getAllBySysKnowledgeCategory, //获取知识类型信息，默认返回1级菜单类型\r\n    importSysKnowledgeList        //导入知识点数据\r\n  } from \"@/api/index\";\r\n  import excel from \"@/libs/excel\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        importModalVisible: false,\r\n        reading: false, // 读取中\r\n        uploadfile: {\r\n          name: \"\"\r\n        },\r\n        searchKey:'',\r\n        treeTitle: '',                        //选中节点名称\r\n        categoryId:'',                        //选中节点的ID\r\n        data: [],\r\n        importLoading: false, // 导入加载状态\r\n        importColumns: [],\r\n        importTableData: [],\r\n      }\r\n    },\r\n    methods: {\r\n      init() {\r\n        this.getParentList()\r\n      },\r\n      getParentList() {\r\n        this.loading = true;\r\n        getAllBySysKnowledgeCategory().then(res => {\r\n          this.loading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.isParent) {\r\n                e.loading = false;\r\n                e.children = [];\r\n              }\r\n            });\r\n            this.data = res.result;\r\n          } else {\r\n            this.$Message.error({\r\n              background: true,\r\n              content: res.message\r\n            })\r\n          }\r\n        });\r\n      },\r\n      search() {\r\n        if (this.timetask) {\r\n          clearTimeout(this.timetask)\r\n        }\r\n        this.timetask = setTimeout(this.searchAjax, 1000)\r\n      },\r\n      searchAjax() {\r\n        console.log('输入框搜索')\r\n        if (this.searchKey) {\r\n          this.loading = true;\r\n          getAllBySysKnowledgeCategory({title: this.searchKey}).then(res => {\r\n            this.loading = false;\r\n            if (res.success) {\r\n              this.data = res.result;\r\n            }\r\n          });\r\n        } else {\r\n          // 为空重新加载\r\n          this.getParentList();\r\n        }\r\n      },\r\n      cancelTree() {\r\n        console.log('树节点取消选择按钮')\r\n        let data = this.$refs.tree.getSelectedNodes()[0];\r\n        if (data) {\r\n          data.selected = false;\r\n        }\r\n        this.categoryId = '';\r\n        this.treeTitle = \"\";\r\n      },\r\n      selectTree(v) {\r\n        if (v.length > 0) {\r\n          // 转换null为\"\"\r\n          for (let attr in v[0]) {\r\n            if (v[0][attr] == null) {\r\n              v[0][attr] = \"\";\r\n            }\r\n          }\r\n          let str = JSON.stringify(v[0]);\r\n          let data = JSON.parse(str);\r\n          console.log(data)\r\n          this.categoryId = data.id;\r\n          this.treeTitle = data.title;\r\n        } else {\r\n          this.cancelTree();\r\n        }\r\n      },\r\n      loadData(item, callback) {\r\n        console.log(item)\r\n        let params = {\r\n          parentId: item.id,\r\n        }\r\n        // 异步加载树子类数据\r\n        getAllBySysKnowledgeCategory(params).then(res => {\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.isParent) {\r\n                e.loading = false;\r\n                e.children = [];\r\n              }\r\n            });\r\n            callback(res.result);\r\n          }\r\n        });\r\n      },\r\n      // ------------------------------------------------------------------------------------\r\n      beforeUploadImport(file) {\r\n        this.uploadfile = file;\r\n        const fileExt = file.name\r\n          .split(\".\")\r\n          .pop()\r\n          .toLocaleLowerCase();\r\n        if (fileExt == \"xlsx\" || fileExt == \"xls\") {\r\n          this.readFile(file);\r\n          this.file = file;\r\n        } else {\r\n          this.$Notice.warning({\r\n            title: \"文件类型错误\",\r\n            desc: \"所选文件‘ \" +\r\n              file.name +\r\n              \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\r\n          });\r\n        }\r\n        return false;\r\n      },\r\n      readFile(file) {\r\n        this.reading = true;\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onerror = e => {\r\n          this.reading = false;\r\n          this.$Message.error(\"文件读取出错\");\r\n        };\r\n        reader.onload = e => {\r\n          const data = e.target.result;\r\n          const {\r\n            header,\r\n            results\r\n          } = excel.read(data, \"array\");\r\n          const tableTitle = header.map(item => {\r\n            return {\r\n              title: item,\r\n              key: item,\r\n              minWidth: 100,\r\n              align: \"center\"\r\n            };\r\n          });\r\n          this.importTableData = results;\r\n          this.importColumns = tableTitle;\r\n          this.reading = false;\r\n          this.$Message.success(\"读取数据成功\");\r\n        };\r\n      },\r\n      importData() {\r\n        if(!this.categoryId){\r\n          this.$Message.warning('请选择知识类型')\r\n          return false\r\n        }\r\n        this.importTableData.forEach(item=>{\r\n          item.contentText=item.content\r\n        })\r\n        this.importTableData=JSON.stringify(this.importTableData);\r\n        let params={\r\n          categoryId:this.categoryId,\r\n          dataList:this.importTableData\r\n        }\r\n        this.importLoading = true;\r\n        // 传入导入数据 后端接收body数组列表批量导入\r\n        importSysKnowledgeList(params).then(res => {\r\n          this.importLoading = false;\r\n          if (res.success) {\r\n            this.clearImportData()\r\n            this.$parent.getDataList();\r\n            this.importModalVisible = false;\r\n            this.$Modal.info({\r\n              title: \"导入结果\",\r\n              content: res.message\r\n            });\r\n          }else{\r\n            this.$Message.error({\r\n              background: true,\r\n              content: res.message\r\n            })\r\n          }\r\n        });\r\n      },\r\n      clearImportData() {\r\n        this.importTableData = [];\r\n        this.importColumns = [];\r\n        this.uploadfile = {};\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped=\"scoped\">\r\n  .demo-drawer-footer {\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    background: #fff;\r\n  }\r\n</style>\r\n"]}]}