{"remainingRequest":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\my-components\\excel\\excelImport.vue?vue&type=style&index=0&id=698a8afc&scoped=scoped&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\my-components\\excel\\excelImport.vue","mtime":1614579763291},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kZW1vLWRyYXdlci1mb290ZXIgewogIHdpZHRoOiAxMDAlOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICBib3JkZXItdG9wOiAxcHggc29saWQgI2U4ZThlODsKICBwYWRkaW5nOiAxMHB4IDE2cHg7CiAgYmFja2dyb3VuZDogI2ZmZjsKfQo="},{"version":3,"sources":["excelImport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"excelImport.vue","sourceRoot":"src/views/my-components/excel","sourcesContent":["<template>\r\n  <Drawer title=\"导入数据\" closable v-model=\"importModalVisible\" width=\"1000\">\r\n    <Row>\r\n      <div style=\"display:flex;justify-content: space-between;align-items: center;\">\r\n        <Upload action :before-upload=\"beforeUploadImport\" accept=\".xls, .xlsx\">\r\n          <Button :loading=\"reading\" icon=\"ios-cloud-upload-outline\" style=\"margin-right:10px\">上传Excel文件</Button>\r\n          <span v-if=\"uploadfile.name\">当前选择文件：{{ uploadfile.name }}</span>\r\n        </Upload>\r\n        <Button @click=\"clearImportData\" icon=\"md-trash\">清空数据</Button>\r\n      </div>\r\n      <Alert type=\"warning\" show-icon>导入前请下载查看导入模版数据文件，确保数据格式正确，不得修改列名称。</Alert>\r\n      <Table :columns=\"importColumns\" border height=\"510\" :data=\"importTableData\" ref=\"importTable\"></Table>\r\n    </Row>\r\n    <div class=\"demo-drawer-footer\">\r\n      <Button :loading=\"importLoading\" :disabled=\"importTableData.length<=0\" @click=\"importData\" class=\"mt-10\" type=\"primary\">确认导入<span v-if=\"importTableData.length>0\">{{importTableData.length}} 条数据</span>\r\n      </Button>\r\n    </div>\r\n  </Drawer>\r\n</template>\r\n\r\n<script>\r\n  import excel from \"@/libs/excel\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        importModalVisible: false,\r\n        reading: false, // 读取中\r\n        uploadfile: {\r\n          name: \"\"\r\n        },\r\n        data: [],\r\n        importLoading: false, // 导入加载状态\r\n        importColumns: [],\r\n        importTableData: [],\r\n      }\r\n    },\r\n    methods: {\r\n      beforeUploadImport(file) {\r\n        this.uploadfile = file;\r\n        const fileExt = file.name\r\n          .split(\".\")\r\n          .pop()\r\n          .toLocaleLowerCase();\r\n        if (fileExt == \"xlsx\" || fileExt == \"xls\") {\r\n          this.readFile(file);\r\n          this.file = file;\r\n        } else {\r\n          this.$Notice.warning({\r\n            title: \"文件类型错误\",\r\n            desc: \"所选文件‘ \" +\r\n              file.name +\r\n              \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\r\n          });\r\n        }\r\n        return false;\r\n      },\r\n      readFile(file) {\r\n        this.reading = true;\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onerror = e => {\r\n          this.reading = false;\r\n          this.$Message.error(\"文件读取出错\");\r\n        };\r\n        reader.onload = e => {\r\n          const data = e.target.result;\r\n          const {\r\n            header,\r\n            results\r\n          } = excel.read(data, \"array\");\r\n          const tableTitle = header.map(item => {\r\n            return {\r\n              title: item,\r\n              key: item,\r\n              minWidth: 100,\r\n              align: \"center\"\r\n            };\r\n          });\r\n          this.importTableData = results;\r\n          this.importColumns = tableTitle;\r\n          this.reading = false;\r\n          this.$Message.success(\"读取数据成功\");\r\n        };\r\n      },\r\n      importData() {\r\n        this.importLoading = true;\r\n        this.$emit('import',this.importTableData)\r\n      },\r\n      clearImportData() {\r\n        this.importTableData = [];\r\n        this.importColumns = [];\r\n        this.uploadfile = {};\r\n      },\r\n      close(){\r\n        this.clearImportData()\r\n        this.importLoading = false;\r\n        this.importModalVisible = false;\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped=\"scoped\">\r\n  .demo-drawer-footer {\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    background: #fff;\r\n  }\r\n</style>\r\n"]}]}