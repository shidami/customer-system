{"remainingRequest":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\knowledge\\components\\excelImport.vue?vue&type=style&index=0&id=b65cf2e4&scoped=scoped&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\knowledge\\components\\excelImport.vue","mtime":1614579763251},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZGVtby1kcmF3ZXItZm9vdGVyIHsKICB3aWR0aDogMTAwJTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAwOwogIGxlZnQ6IDA7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOGU4ZTg7CiAgcGFkZGluZzogMTBweCAxNnB4OwogIGJhY2tncm91bmQ6ICNmZmY7Cn0K"},{"version":3,"sources":["excelImport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"excelImport.vue","sourceRoot":"src/views/knowledge/components","sourcesContent":["<template>\r\n  <Drawer title=\"导入数据\" closable v-model=\"importModalVisible\" width=\"1000\">\r\n    <Row gutter=\"20\">\r\n      <Col span=\"6\">\r\n        <Spin fix v-if=\"loading\"></Spin>\r\n        <Input v-model=\"searchKey\" suffix=\"ios-search\" @on-change=\"search\" placeholder=\"输入节点名搜索\" clearable />\r\n        <Alert show-icon class=\"mt-10\">当前选择编辑：\r\n          <span class=\"select-title\">{{treeTitle}}</span>\r\n          <a class=\"select-clear ml-5\" @click=\"cancelTree\" v-if=\"treeTitle\">取消选择</a>\r\n        </Alert>\r\n        <Tree ref=\"tree\" :data=\"data\" :load-data=\"loadData\" @on-select-change=\"selectTree\"></Tree>\r\n      </Col>\r\n      <Col span=\"18\">\r\n        <div style=\"display:flex;justify-content: space-between;align-items: center;\">\r\n          <Upload action :before-upload=\"beforeUploadImport\" accept=\".xls, .xlsx\">\r\n            <Button :loading=\"reading\" icon=\"ios-cloud-upload-outline\" style=\"margin-right:10px\">上传Excel文件</Button>\r\n            <span v-if=\"uploadfile.name\">当前选择文件：{{ uploadfile.name }}</span>\r\n          </Upload>\r\n          <Button @click=\"clearImportData\" icon=\"md-trash\">清空数据</Button>\r\n        </div>\r\n        <Alert type=\"warning\" show-icon>导入前请下载查看导入模版数据文件，确保数据格式正确，不得修改列名称。</Alert>\r\n        <Table :columns=\"importColumns\" border height=\"510\" :data=\"importTableData\" ref=\"importTable\"></Table>\r\n      </Col>\r\n    </Row>\r\n    <div class=\"demo-drawer-footer\">\r\n      <Button :loading=\"importLoading\" :disabled=\"importTableData.length<=0\" @click=\"importData\" class=\"mt-10\" type=\"primary\">确认导入<span\r\n          v-if=\"importTableData.length>0\">{{importTableData.length}} 条数据</span>\r\n      </Button>\r\n    </div>\r\n  </Drawer>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getAllBySysKnowledgeCategory, //获取知识类型信息，默认返回1级菜单类型\r\n    importSysKnowledgeList        //导入知识点数据\r\n  } from \"@/api/index\";\r\n  import excel from \"@/libs/excel\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        loading: false,\r\n        importModalVisible: false,\r\n        reading: false, // 读取中\r\n        uploadfile: {\r\n          name: \"\"\r\n        },\r\n        searchKey:'',\r\n        treeTitle: '',                        //选中节点名称\r\n        categoryId:'',                        //选中节点的ID\r\n        data: [],\r\n        importLoading: false, // 导入加载状态\r\n        importColumns: [],\r\n        importTableData: [],\r\n      }\r\n    },\r\n    methods: {\r\n      init() {\r\n        this.getParentList()\r\n      },\r\n      getParentList() {\r\n        this.loading = true;\r\n        getAllBySysKnowledgeCategory().then(res => {\r\n          this.loading = false;\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.isParent) {\r\n                e.loading = false;\r\n                e.children = [];\r\n              }\r\n            });\r\n            this.data = res.result;\r\n          } else {\r\n            this.$Message.error({\r\n              background: true,\r\n              content: res.message\r\n            })\r\n          }\r\n        });\r\n      },\r\n      search() {\r\n        if (this.timetask) {\r\n          clearTimeout(this.timetask)\r\n        }\r\n        this.timetask = setTimeout(this.searchAjax, 1000)\r\n      },\r\n      searchAjax() {\r\n        console.log('输入框搜索')\r\n        if (this.searchKey) {\r\n          this.loading = true;\r\n          getAllBySysKnowledgeCategory({title: this.searchKey}).then(res => {\r\n            this.loading = false;\r\n            if (res.success) {\r\n              this.data = res.result;\r\n            }\r\n          });\r\n        } else {\r\n          // 为空重新加载\r\n          this.getParentList();\r\n        }\r\n      },\r\n      cancelTree() {\r\n        console.log('树节点取消选择按钮')\r\n        let data = this.$refs.tree.getSelectedNodes()[0];\r\n        if (data) {\r\n          data.selected = false;\r\n        }\r\n        this.categoryId = '';\r\n        this.treeTitle = \"\";\r\n      },\r\n      selectTree(v) {\r\n        if (v.length > 0) {\r\n          // 转换null为\"\"\r\n          for (let attr in v[0]) {\r\n            if (v[0][attr] == null) {\r\n              v[0][attr] = \"\";\r\n            }\r\n          }\r\n          let str = JSON.stringify(v[0]);\r\n          let data = JSON.parse(str);\r\n          console.log(data)\r\n          this.categoryId = data.id;\r\n          this.treeTitle = data.title;\r\n        } else {\r\n          this.cancelTree();\r\n        }\r\n      },\r\n      loadData(item, callback) {\r\n        console.log(item)\r\n        let params = {\r\n          parentId: item.id,\r\n        }\r\n        // 异步加载树子类数据\r\n        getAllBySysKnowledgeCategory(params).then(res => {\r\n          if (res.success) {\r\n            res.result.forEach(function(e) {\r\n              if (e.isParent) {\r\n                e.loading = false;\r\n                e.children = [];\r\n              }\r\n            });\r\n            callback(res.result);\r\n          }\r\n        });\r\n      },\r\n      // ------------------------------------------------------------------------------------\r\n      beforeUploadImport(file) {\r\n        this.uploadfile = file;\r\n        const fileExt = file.name\r\n          .split(\".\")\r\n          .pop()\r\n          .toLocaleLowerCase();\r\n        if (fileExt == \"xlsx\" || fileExt == \"xls\") {\r\n          this.readFile(file);\r\n          this.file = file;\r\n        } else {\r\n          this.$Notice.warning({\r\n            title: \"文件类型错误\",\r\n            desc: \"所选文件‘ \" +\r\n              file.name +\r\n              \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\r\n          });\r\n        }\r\n        return false;\r\n      },\r\n      readFile(file) {\r\n        this.reading = true;\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onerror = e => {\r\n          this.reading = false;\r\n          this.$Message.error(\"文件读取出错\");\r\n        };\r\n        reader.onload = e => {\r\n          const data = e.target.result;\r\n          const {\r\n            header,\r\n            results\r\n          } = excel.read(data, \"array\");\r\n          const tableTitle = header.map(item => {\r\n            return {\r\n              title: item,\r\n              key: item,\r\n              minWidth: 100,\r\n              align: \"center\"\r\n            };\r\n          });\r\n          this.importTableData = results;\r\n          this.importColumns = tableTitle;\r\n          this.reading = false;\r\n          this.$Message.success(\"读取数据成功\");\r\n        };\r\n      },\r\n      importData() {\r\n        if(!this.categoryId){\r\n          this.$Message.warning('请选择知识类型')\r\n          return false\r\n        }\r\n        this.importTableData.forEach(item=>{\r\n          item.contentText=item.content\r\n        })\r\n        this.importTableData=JSON.stringify(this.importTableData);\r\n        let params={\r\n          categoryId:this.categoryId,\r\n          dataList:this.importTableData\r\n        }\r\n        this.importLoading = true;\r\n        // 传入导入数据 后端接收body数组列表批量导入\r\n        importSysKnowledgeList(params).then(res => {\r\n          this.importLoading = false;\r\n          if (res.success) {\r\n            this.clearImportData()\r\n            this.$parent.getDataList();\r\n            this.importModalVisible = false;\r\n            this.$Modal.info({\r\n              title: \"导入结果\",\r\n              content: res.message\r\n            });\r\n          }else{\r\n            this.$Message.error({\r\n              background: true,\r\n              content: res.message\r\n            })\r\n          }\r\n        });\r\n      },\r\n      clearImportData() {\r\n        this.importTableData = [];\r\n        this.importColumns = [];\r\n        this.uploadfile = {};\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped=\"scoped\">\r\n  .demo-drawer-footer {\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    background: #fff;\r\n  }\r\n</style>\r\n"]}]}