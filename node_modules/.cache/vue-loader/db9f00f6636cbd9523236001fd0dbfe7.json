{"remainingRequest":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\my-components\\xboot\\upload-pic-thumb.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\my-components\\xboot\\upload-pic-thumb.vue","mtime":1614579763341},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnVwbG9hZC10aHVtYiB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGZsZXgtd3JhcDogd3JhcDsNCiAgLnVwbG9hZC1saXN0IHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIGJveC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMik7DQogICAgbWFyZ2luLXJpZ2h0OiA4cHg7DQogIH0NCiAgLnVwbG9hZC1saXN0IGltZyB7DQogICAgb2JqZWN0LWZpdDogY292ZXI7DQogIH0NCiAgLnVwbG9hZC1idG4gew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgfQ0KICAudXBsb2FkLWxpc3QtY292ZXIgew0KICAgIGRpc3BsYXk6IG5vbmU7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIHRvcDogMDsNCiAgICBib3R0b206IDA7DQogICAgbGVmdDogMDsNCiAgICByaWdodDogMDsNCiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7DQogIH0NCiAgLnVwbG9hZC1saXN0OmhvdmVyIC51cGxvYWQtbGlzdC1jb3ZlciB7DQogICAgZGlzcGxheTogYmxvY2s7DQogIH0NCiAgLnVwbG9hZC1saXN0LWNvdmVyIGkgew0KICAgIGNvbG9yOiAjZmZmOw0KICAgIGZvbnQtc2l6ZTogMjBweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgbWFyZ2luOiAwIDJweDsNCiAgfQ0KICAubGlzdC1ncm91cCB7DQogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICB9DQogIC50aHVtYi1naG9zdCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQ6ICNjOGViZmI7DQogIH0NCn0NCg=="},{"version":3,"sources":["upload-pic-thumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload-pic-thumb.vue","sourceRoot":"src/views/my-components/xboot","sourcesContent":["<template>\r\n  <div class=\"upload-thumb\">\r\n    <vuedraggable\r\n      :list=\"uploadList\"\r\n      :disabled=\"!draggable||!multiple\"\r\n      :animation=\"200\"\r\n      class=\"list-group\"\r\n      ghost-class=\"thumb-ghost\"\r\n      @end=\"onEnd\"\r\n    >\r\n      <div\r\n        class=\"upload-list\"\r\n        :style=\"{width: `calc(${width} + 2px)`, height: `calc(${height} + 2px)`, lineHeight: height}\"\r\n        v-for=\"(item, index) in uploadList\"\r\n        :key=\"index\"\r\n      >\r\n        <div v-if=\"item.status == 'finished'\">\r\n          <img :src=\"item.url\" :style=\"{height: height}\" />\r\n          <div class=\"upload-list-cover\">\r\n            <Icon type=\"ios-eye-outline\" @click=\"handleView(item.url, index)\"></Icon>\r\n            <Icon type=\"ios-trash-outline\" @click=\"handleRemove(item)\"></Icon>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <Progress v-if=\"item.showProgress\" :percent=\"item.percentage\" hide-info></Progress>\r\n        </div>\r\n      </div>\r\n    </vuedraggable>\r\n    <Upload\r\n      ref=\"upload\"\r\n      :multiple=\"multiple\"\r\n      :show-upload-list=\"false\"\r\n      :on-success=\"handleSuccess\"\r\n      :on-error=\"handleError\"\r\n      :format=\"format\"\r\n      :accept=\"accept\"\r\n      :max-size=\"maxSize*1024\"\r\n      :on-format-error=\"handleFormatError\"\r\n      :on-exceeded-size=\"handleMaxSize\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n      type=\"drag\"\r\n      :action=\"uploadFileUrl\"\r\n      :headers=\"accessToken\"\r\n      class=\"upload-btn\"\r\n      :style=\"{width: width}\"\r\n    >\r\n      <div class=\"upload-camera\" :style=\"{width: width, height: height, lineHeight: height}\">\r\n        <Icon type=\"md-camera\" size=\"20\"></Icon>\r\n      </div>\r\n    </Upload>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"viewerjs/dist/viewer.css\";\r\nimport Viewer from \"viewerjs\";\r\nimport { uploadFile } from \"@/api/index\";\r\nimport vuedraggable from \"vuedraggable\";\r\nexport default {\r\n  name: \"uploadPicThumb\",\r\n  components: {\r\n    vuedraggable\r\n  },\r\n  props: {\r\n    value: {\r\n      type: null\r\n    },\r\n    draggable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    maxSize: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: \"60px\"\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"60px\"\r\n    },\r\n    accept: {\r\n      type: String,\r\n      default: \".jpg, .jpeg, .png, .gif\"\r\n    }\r\n  },\r\n  computed: {\r\n    format() {\r\n      if (this.accept) {\r\n        let format = [];\r\n        this.accept.split(\",\").forEach(e => {\r\n          format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\r\n        });\r\n        return format;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      accessToken: {},\r\n      uploadFileUrl: uploadFile,\r\n      uploadList: []\r\n    };\r\n  },\r\n  methods: {\r\n    onEnd() {\r\n      this.returnValue();\r\n    },\r\n    init() {\r\n      this.setData(this.value, true);\r\n      this.accessToken = {\r\n        accessToken: this.getStore(\"accessToken\")\r\n      };\r\n    },\r\n    handleView(v, i) {\r\n      let image = new Image();\r\n      image.src = v;\r\n      let viewer = new Viewer(image, {\r\n        hidden: function() {\r\n          viewer.destroy();\r\n        }\r\n      });\r\n      viewer.show();\r\n    },\r\n    handleRemove(file) {\r\n      const uploadList = this.uploadList;\r\n      this.uploadList.splice(uploadList.indexOf(file), 1);\r\n      this.returnValue();\r\n    },\r\n    handleSuccess(res, file) {\r\n      if (res.success) {\r\n        file.url = res.result;\r\n        // 单张图片处理\r\n        if (!this.multiple && this.uploadList.length > 0) {\r\n          // 删除第一张\r\n          this.uploadList.splice(0, 1);\r\n        }\r\n        this.uploadList.push(file);\r\n        // 返回组件值\r\n        this.returnValue();\r\n      } else {\r\n        this.$Message.error(res.message);\r\n      }\r\n    },\r\n    handleError(error, file, fileList) {\r\n      this.$Message.error(error.toString());\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"不支持的文件格式\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’格式不正确, 请选择 \" +\r\n          this.accept +\r\n          \" 图片格式文件\"\r\n      });\r\n    },\r\n    handleMaxSize(file) {\r\n      this.$Notice.warning({\r\n        title: \"文件大小过大\",\r\n        desc:\r\n          \"所选文件‘ \" +\r\n          file.name +\r\n          \" ’大小过大, 不得超过 \" +\r\n          this.maxSize +\r\n          \"M.\"\r\n      });\r\n    },\r\n    handleBeforeUpload() {\r\n      if (this.multiple && this.uploadList.length >= this.limit) {\r\n        this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    returnValue() {\r\n      if (!this.uploadList || this.uploadList.length < 1) {\r\n        if (!this.multiple) {\r\n          this.$emit(\"input\", \"\");\r\n          this.$emit(\"on-change\", \"\");\r\n        } else {\r\n          this.$emit(\"input\", []);\r\n          this.$emit(\"on-change\", []);\r\n        }\r\n        return;\r\n      }\r\n      if (!this.multiple) {\r\n        // 单张\r\n        let v = this.uploadList[0].url;\r\n        this.$emit(\"input\", v);\r\n        this.$emit(\"on-change\", v);\r\n      } else {\r\n        let v = [];\r\n        this.uploadList.forEach(e => {\r\n          v.push(e.url);\r\n        });\r\n        this.$emit(\"input\", v);\r\n        this.$emit(\"on-change\", v);\r\n      }\r\n    },\r\n    setData(v, init) {\r\n      if (typeof v == \"string\") {\r\n        // 单张\r\n        if (this.multiple) {\r\n          this.$Message.warning(\"多张上传仅支持数组数据类型\");\r\n          return;\r\n        }\r\n        if (!v) {\r\n          return;\r\n        }\r\n        this.uploadList = [];\r\n        let item = {\r\n          url: v,\r\n          status: \"finished\"\r\n        };\r\n        this.uploadList.push(item);\r\n        this.$emit(\"on-change\", v);\r\n      } else if (typeof v == \"object\") {\r\n        // 多张\r\n        if (!this.multiple) {\r\n          this.$Message.warning(\"单张上传仅支持字符串数据类型\");\r\n          return;\r\n        }\r\n        this.uploadList = [];\r\n        if (v.length > this.limit) {\r\n          for (let i = 0; i < this.limit; i++) {\r\n            let item = {\r\n              url: v[i],\r\n              status: \"finished\"\r\n            };\r\n            this.uploadList.push(item);\r\n          }\r\n          this.$emit(\"on-change\", v.slice(0, this.limit));\r\n          if (init) {\r\n            this.$emit(\"input\", v.slice(0, this.limit));\r\n          }\r\n          this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\r\n        } else {\r\n          v.forEach(e => {\r\n            let item = {\r\n              url: e,\r\n              status: \"finished\"\r\n            };\r\n            this.uploadList.push(item);\r\n          });\r\n          this.$emit(\"on-change\", v);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.setData(val);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.upload-thumb {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  .upload-list {\r\n    display: inline-block;\r\n    text-align: center;\r\n    border: 1px solid transparent;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    background: #fff;\r\n    position: relative;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\r\n    margin-right: 8px;\r\n  }\r\n  .upload-list img {\r\n    object-fit: cover;\r\n  }\r\n  .upload-btn {\r\n    display: inline-block;\r\n  }\r\n  .upload-list-cover {\r\n    display: none;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0, 0, 0, 0.6);\r\n  }\r\n  .upload-list:hover .upload-list-cover {\r\n    display: block;\r\n  }\r\n  .upload-list-cover i {\r\n    color: #fff;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    margin: 0 2px;\r\n  }\r\n  .list-group {\r\n    display: inline-block;\r\n  }\r\n  .thumb-ghost {\r\n    opacity: 0.5;\r\n    background: #c8ebfb;\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}