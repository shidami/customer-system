{"remainingRequest":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\xboot-components\\xboot-components.vue?vue&type=template&id=ce9e05b6&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\src\\views\\xboot-components\\xboot-components.vue","mtime":1614579763441},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\shimin\\current project\\xrcc-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}